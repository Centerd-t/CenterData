{"version":3,"file":"src_app_pages_company_company_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAC+E;AAMJ;;;;;;;;ICkMnD,0EAAmD;IACjD,mEAA2B;IAC7B,4DAAM;;;IAEJ,qEAA2G;;;IAAtG,yIAAY;;;IAqBhB,wEAAsG;IACpG,+FAAmC;IAAA,4DAAI;;;IAF1C,wEAAkI;IACjI,gIACyC;IAC1C,qEAAe;;;IAFoB,0DAAkE;IAAlE,qIAAkE;;;IAY/F,wEAA8F;IAC1F,qFAAyB;IAAA,4DAAI;;;IAFrC,wEAAkH;IAC9G,gIACiC;IACrC,qEAAe;;;IAFuB,0DAA0D;IAA1D,6HAA0D;;;IAe5F,wEAAgG;IAC/F,uFAA2B;IAAA,4DAAI;;;IAFpC,wEAAsH;IAClH,gIACgC;IACpC,qEAAe;;;IAFuB,0DAA4D;IAA5D,+HAA4D;;;IAY9F,wEAA8F;IAC7F,oFAAwB;IAAA,4DAAI;;;IAFjC,wEAAkH;IAC9G,gIAC6B;IACjC,qEAAe;;;IAFuB,0DAA0D;IAA1D,6HAA0D;;;IAgBnG,wEAAyF;IACxF,+EAAmB;IAAA,4DAAI;;;IAF1B,wEAAwG;IACtG,gIACwB;IACzB,qEAAe;;;IAFoB,0DAAqD;IAArD,wHAAqD;;;IAgBpF,wEAA2F;IAC3F,iFAAqB;IAAA,4DAAI;;;IAF3B,wEAA4G;IAC1G,gIACyB;IAC3B,qEAAe;;;IAFqB,0DAAuD;IAAvD,0HAAuD;;;IAerF,wEAAuF;IACnF,6EAAiB;IAAA,4DAAI;;;IACzB,wEAAsF;IAClF,qFAAyB;IAAA,4DAAI;;;IAJrC,wEAAoG;IAChG,gIACyB;IACzB,gIACiC;IACrC,qEAAe;;;IAJuB,0DAAmD;IAAnD,sHAAmD;IAEnD,0DAAkD;IAAlD,qHAAkD;;;IAcvF,wEAAgG;IAC/F,sFAA0B;IAAA,4DAAI;;;IAFjC,wEAAsH;IACpH,gIAC+B;IAChC,qEAAe;;;IAFoB,0DAA4D;IAA5D,+HAA4D;;;IAc7F,wEAA0F;IACxF,iFAAqB;IAAA,4DAAI;;;IAF7B,wEAA0G;IACxG,gIAC2B;IAC7B,qEAAe;;;IAFqB,0DAAsD;IAAtD,0HAAsD;;;IAsBvF,wEAA0F;IACzF,gFAAoB;IAAA,4DAAI;;;IAF5B,wEAA0G;IACvG,gIACyB;IAC5B,qEAAe;;;IAFsB,0DAAsD;IAAtD,0HAAsD;;;IAmBvF,wEAAkG;IAClG,wFAA4B;IAAA,4DAAI;;;IAFpC,wEAA0H;IACtH,iIACgC;IACpC,qEAAe;;;IAFuB,0DAA8D;IAA9D,kIAA8D;;;IAcjG,wEAAuF;IACtF,8EAAkB;IAAA,4DAAI;;;IAF1B,wEAAoG;IACjG,iIACuB;IAC1B,qEAAe;;;IAFsB,0DAAmD;IAAnD,uHAAmD;;;IActF,wEAAyF;IACxF,+EAAmB;IAAA,4DAAI;;;IAF1B,wEAAwG;IACtG,iIACwB;IAC1B,qEAAe;;;IAFqB,0DAAqD;IAArD,yHAAqD;;AD7Y9G,MAAM,uBAAuB;IAalC,YACU,WAAwB,EACxB,MAAc,EACd,MAAsB,EACtB,cAA8B,EAC9B,aAA8B;QAJ9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAgB;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAiB;QAhBxC,cAAS,GAAG,KAAK,CAAC;QAElB,iBAAY,GAAG,KAAK,CAAC;QAErB,eAAe;QACf,mBAAc,GAAgB,IAAI,CAAC,CAAC,2CAA2C;QAC/E,SAAI,GAAgC,IAAI,CAAC,CAAC,6DAA6D;QAEvG,eAAe;QACf,iBAAY,GAAE,IAAI,CAAC;IAQhB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;SACpC;IACH,CAAC;IAED;;OAEG;IAEH,wBAAwB;QACxB,MAAM,UAAU,GAAG,6BAA6B,CAAC;QACjD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,oBAAoB,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACjD,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACzC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC3C,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACzC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC3C,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;YAClE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACrC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAClC,IAAI,EAAE,CAAC,IAAI,CAAC;YACZ,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACrC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC7C,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAEC,eAAe;IACd,YAAY;QACX,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,MAAM,CAAC;SACf;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED;;OAEG;IACF,YAAY,CAAC,KAAY,EAAE,SAAiB;;QAC3C,MAAM,YAAY,GAAG,KAAK,CAAC,MAA0B,CAAC;QACtD,IAAI,YAAY,CAAC,KAAK,IAAI,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACvD,MAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,UAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,oCAAoC;YACxF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE3B,wCAAwC;YACxC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE;gBACpB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC5B;IACH,CAAC;IAED;;;OAGG;IACF,cAAc,CAAC,SAAS;QACvB,IAAI,UAAU,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;QAE1C,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;gBAC7B,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;gBAC1B,oBAAoB,EAAE,IAAI,CAAC,sBAAsB,CAAC;gBAClD,eAAe,EAAE,IAAI,CAAC,iBAAiB,CAAC;gBACxC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;aACrB,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC/B,OAAO;SACR,CAAC,+BAA+B;QAEjC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS;gBACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;SACpC;QAED,kDAAkD;QAClD,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC3C,IAAI,GAAG,KAAK,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,IAAI,EAAE;gBACpE,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;aAC3F;iBAAM;gBACL,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aACtD;SACF;QAED,IAAI,CAAC,cAAc;aAChB,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;aAC5C,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,8BAA8B;YAC9B,yDAAyD;YACzD,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,WAAW;YACX,yDAAyD;YACzD,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,IAAI;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,iBAAiB;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mFAAgB,EAAE,qFAAkB,CAAC,CAAC,CAAC;IAC/D,CAAC;;8FAhKU,uBAAuB;qHAAvB,uBAAuB;QC+KpC,yEAAiB;QAGW,uDAAc;QAAA,4DAAiB;QAC/C,kFAAgE;QAEzB,mJAAY,cAAU,IAAC;QAEzD,yEAAiB;QAIV,qHAEM;QAEJ,qHAA2G;QAC/G,4DAAM;QAIT,0EAAsB;QAEgB,uEAAW;QAAA,4DAAQ;QACpD,4EAAiG;QAA1C,uJAAU,yBAAqB,MAAM,CAAC,IAAC;QAA9F,4DAAiG;QAIrG,0EAAsB;QAGkC,2FAA8B;QAAA,4DAAQ;QACvF,iFAAe;QACb,wEAA6E;QAE/E,4DAAgB;QACjB,wIAGe;QACjB,4DAAM;QAEN,0EAAyB;QACkB,0EAAc;QAAA,4DAAQ;QAC7D,iFAAe;QACb,wEAAoE;QAEtE,4DAAgB;QAChB,wIAGe;QACnB,4DAAM;QAGV,0EAAsB;QAG2B,4EAAgB;QAAA,4DAAQ;QACjE,iFAAe;QACb,wEAAsE;QAExE,4DAAgB;QAChB,wIAGe;QACpB,4DAAM;QAEN,0EAAyB;QACmB,0EAAc;QAAA,4DAAQ;QAC7D,iFAAe;QACb,wEAAoE;QAEtE,4DAAgB;QAChB,wIAGe;QACnB,4DAAM;QAKb,2EAA4B;QACkC,qEAAS;QAAA,4DAAQ;QAC3E,2EAAuB;QAElB,wEAAoF;QAEvF,4DAAgB;QAChB,wIAGgB;QAClB,4DAAM;QAIV,0EAAiB;QAG6B,uEAAW;QAAA,4DAAQ;QACxD,iFAAe;QACb,wEAAmE;QAErE,4DAAgB;QAChB,wIAGe;QACjB,4DAAM;QAGV,0EAAsB;QAEiB,oEAAQ;QAAA,4DAAQ;QACjD,iFAAe;QACb,wEACmE;QAErE,4DAAgB;QACd,wIAKe;QACnB,4DAAM;QAGV,0EAAsB;QAE0B,4EAAgB;QAAA,4DAAQ;QAClE,iFAAe;QACb,wEAAsE;QAExE,4DAAgB;QACf,wIAGgB;QACnB,4DAAM;QAGV,2EAAsB;QAEoB,sEAAU;QAAA,4DAAQ;QACtD,iFAAe;QACb,wEAAgE;QAElE,4DAAgB;QACd,wIAGe;QACnB,4DAAM;QAKb,0EAAiB;QAG4B,sEAAU;QAAA,4DAAQ;QACpD,iFAAe;QACd,wEAA8E;QAC7E,8EAA+D;QAA/B,gJAAS,wBAAoB,IAAC;QAC3D,0EAGU;QACb,4DAAS;QAEX,wIAGe;QACnB,4DAAM;QAGV,2EAAsB;QAE4B,+EAAkB;QAAA,4DAAQ;QACrE,kFAAe;QACb,yEAAsF;QACrF,+EAA+D;QAA/B,iJAAS,wBAAoB,IAAC;QAC3D,2EAGU;QACb,4DAAS;QAEX,0IAGe;QACnB,4DAAM;QAGV,4EAAsB;QAEiB,oEAAO;QAAA,4DAAQ;QAChD,kFAAe;QACb,yEAA6D;QAE/D,4DAAgB;QACd,0IAGe;QACnB,4DAAM;QAGV,4EAAsB;QAEmB,sEAAS;QAAA,4DAAQ;QACpD,kFAAe;QACb,yEAA+D;QAEjE,4DAAgB;QACd,0IAGe;QACnB,4DAAM;QAIV,4EAA4B;QAGgC,mEAAM;QAAA,4DAAS;QACnE,2EACA;QAAA,+EAC0C;QADT,iJAAS,uBAAmB,IAAC;QACpB,sEAAG;QACrC,qEACJ;QAAA,4DAAI;;QA1OR,0DAAc;QAAd,+EAAc;QAChB,0DAA0B;QAA1B,uFAA0B;QAE9B,0DAA4B;QAA5B,yFAA4B;QAME,0DAAqB;QAArB,qFAAqB;QAIQ,0DAAoB;QAApB,oFAAoB;QAoB5D,2DAAiH;QAAjH,qLAAiH;QAY/G,0DAAiG;QAAjG,qKAAiG;QAejG,0DAAqG;QAArG,yKAAqG;QAYrG,0DAAiG;QAAjG,qKAAiG;QAgBtG,0DAAuF;QAAvF,2JAAuF;QAgBpF,0DAA2F;QAA3F,+JAA2F;QAezF,0DAAmF;QAAnF,uJAAmF;QAgBpF,0DAAqG;QAArG,yKAAqG;QAcpG,0DAAyF;QAAzF,6JAAyF;QAc7E,0DAAuB;QAAvB,oFAAuB;QAEpC,0DAAyD;QAAzD,sHAAyD;QAEjE,6HAAoE;QAI3D,0DAAyF;QAAzF,6JAAyF;QAW7E,0DAAuB;QAAvB,oFAAuB;QAEpC,0DAAyD;QAAzD,sHAAyD;QAEjE,6HAAoE;QAI3D,0DAAyG;QAAzG,6KAAyG;QAczG,0DAAmF;QAAnF,uJAAmF;QAcnF,0DAAuF;QAAvF,2JAAuF;QAWlG,0DAA+C;QAA/C,gHAA+C;;;;;;;;;;;;;;;;;;;;;;;;;AC/ZJ;;;;;;;;;;ICyF3C,4EAEa;;;IAFsB,+EAAmB;;;IAF1D,yEACqC;IACjC,kKAEa;IACb,uEAAM;IAAA,uDAAc;IAAA,4DAAO;;;IAJ3B,qFAAgC;IADf,uHAAqD;IAEzD,0DAAoB;IAApB,qFAAoB;IAG3B,0DAAc;IAAd,8EAAc;;;IANhC,wEAA0C;IAClC,6IAMK;IACR,qEAAe;;;IAPP,0DAAc;IAAd,6EAAc;;;IAF3B,qEAAI;IACJ,iJAQoB;IAWpB,4DAAK;;;IAnByB,0DAAU;IAAV,mFAAU;;;;IAsBxC,qEAAI;IACI,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAgC;IAAA,4DAAK;IACzC,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,wDAA0B;IAAA,4DAAK;IACnC,sEAAI;IAAA,wDAA4B;IAAA,4DAAK;IACrC,sEAAI;IAAA,wDAA0B;IAAA,4DAAK;IACnC,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAkD;IAAA,4DAAK;IAC3D,0EAA+B;IACnB,2WAAS,wCAA8B,IAAC;IAG5C,0EAA+D;IACnE,4DAAS;IAAA,mEACT;IAAA,8EACiF;IADtD,4WAAS,gEAAiD,IAAC;IAElF,0EAAgE;IACpE,4DAAS;IAAA,mEACT;IAAA,8EAEqI;IAF3G,4WAAS,4FAA0E,IAAI,GAAG,OAAO,GAAG,SAAS,CAAE,IAAC;IAGtI,0EAE8C;IAClD,4DAAS;IAAA,mEACb;IAAA,4DAAK;;;IA3BD,0DAAqB;IAArB,qFAAqB;IACrB,0DAAoB;IAApB,oFAAoB;IACpB,0DAAgC;IAAhC,gGAAgC;IAChC,0DAAiB;IAAjB,iFAAiB;IACjB,0DAA0B;IAA1B,0FAA0B;IAC1B,0DAA4B;IAA5B,4FAA4B;IAC5B,0DAA0B;IAA1B,0FAA0B;IAC1B,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAkD;IAAlD,kHAAkD;IAa9C,0DAAgI;IAAhI,oLAAgI;IAE5H,0DAAsF;IAAtF,8JAAsF;;;AD9HnH,MAAM,oBAAoB;IAQ/B,YACU,aAAkC,EAClC,aAA8B,EAC9B,MAAc,EACd,MAAsB,EACtB,cAA8B;QAJ9B,kBAAa,GAAb,aAAa,CAAqB;QAClC,kBAAa,GAAb,aAAa,CAAiB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAgB;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAZxC,iBAAY,GAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAInC,UAAK,GAAG,CAAC,CAAC;QACV,SAAI,GAAG,EAAE,CAAC;IAQP,CAAC;IAEJ,QAAQ;QACN,4DAA4D;QAC5D,IAAI,CAAC,OAAO,GAAG;YACb,gEAAgE;YAChE,EAAE,KAAK,EAAE,sBAAsB,EAAE,MAAM,EAAE,yBAAyB,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YAC3F,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YAC7E,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAC,IAAI,EAAE,IAAI,EAAE;YACvE,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;YAC7E,+DAA+D;YAC/D,kEAAkE;YAClE,kEAAkE;YAClE,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;SAC9D,CAAC;QAEF,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACH,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnB,mFAAgB;YAChB,qFAAkB;YAClB,8FAA2B;SAC5B,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,UAAe;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnB,mFAAgB;YAChB,qFAAkB;YAClB,4FAAyB;YACzB,UAAU;SACX,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,SAAS,EAAE,WAAW;QAClC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YACzB,MAAM,EAAE,qBAAqB;YAC7B,OAAO,EACL,+CAA+C;gBAC/C,WAAW;gBACX,gBAAgB;YAClB,MAAM,EAAE,GAAG,EAAE;gBACX,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,SAAS;QACrB,IAAI,cAAc,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;QAE9C,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,SAAS,CACzD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,mCAAmC;YACnC,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,WAAW;YACX,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,IAAI;QACN,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,mBAAmB,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM;QAChD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YACzB,MAAM,EAAE,qBAAqB;YAC7B,OAAO,EACL,+CAA+C;gBAC/C,MAAM;gBACN,KAAK;gBACL,WAAW;gBACX,gBAAgB;YAClB,MAAM,EAAE,GAAG,EAAE;gBACX,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAC9C,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,mBAAmB,CAAC,SAAa,EAAE,MAAU;QAC3C,IAAI,oBAAoB,GAAG;YACzB,SAAS,EAAE,SAAS;YACpB,KAAK,EAAE,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;SACxC,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,SAAS,CACrE,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,mCAAmC;YACnC,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,WAAW;YACX,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,IAAI;QACN,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAC5C,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,mCAAmC;YACnC,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,WAAW;YACX,8DAA8D;YAC9D,yBAAyB;YACzB,sBAAsB;YACtB,QAAQ;YACR,IAAI;QACN,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;wFAxLU,oBAAoB;kHAApB,oBAAoB;QC4DjC,6EAA4C;QAExC,6EAA6D;QAC7D,iFAAgB;QAEgB,wEAAY;QAAA,4DAAM;QAC1C,yEAAsB;QACqB,4IAAS,mBAAe,IAAC;QAAC,yEAAc;QAAA,4DAAS;QAKpG,+EAAc;QAKF,kIAsBc;QACd,oIA+Bc;QAClB,4DAAU;;QAtED,0DAAyB;QAAzB,+HAAyB;QAazB,2DAAmB;QAAnB,gFAAmB;;;;;;;;;;;;;;;;;;;;ACvFe;AAEvD,aAAa;AAC2E;AACX;;;AAE7E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sFAAoB;KAChC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,iGAAuB;KACnC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,iGAAuB;KACnC;CACF,CAAC;AAMK,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHAHtB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,oBAAoB,oFAFrB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBuB;AAA2E;AACxD;AA2B1C;AAEgC;AAExD,cAAc;AACsF;AAEpG,UAAU;AACkC;AACA;AACE;AACc;AACV;AAGlD,iBAAiB;AAC+C;AAEhE,aAAa;AAC2E;AACX;;;AAkDtE,MAAM,aAAa;;0EAAb,aAAa;0GAAb,aAAa;+GANb;QACT,4DAAmB;QACnB,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,mFAAoB,EAAE,KAAK,EAAE,IAAI,EAAE;QAC3E,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,mFAAoB,EAAE,KAAK,EAAE,IAAI,EAAE;KAC5E,YAzCQ;YACP,kEAAgB;YAChB,2DAAe;YACf,yDAAa;YACb,+DAAmB;YACnB,4DAAgB;YAChB,iEAAqB;YACrB,6DAAiB;YACjB,+DAAmB;YACnB,2DAAe;YACf,2DAAe;YACf,4DAAgB;YAChB,uDAAW;YACX,+DAAmB;YACnB,4DAAW;YACX,0DAAc;YACd,+DAAmB;YACnB,2DAAe;YACf,wDAAY;YACZ,0DAAc;YACd,wDAAY;YACZ,6DAAiB;YACjB,wDAAY;YACZ,0DAAY;YACZ,yEAAoB;YACpB,wDAAY;YACZ,yDAAa;YACb,4DAAgB;YAChB,0DAAc;YACd,0DAAc;YACd,+DAAmB;YACnB,kEAAsB,EAAE;YACxB,uDAAW;YACX,yDAAY;YACZ,uEAAmB;YACnB,yDAAY;SACb;mIAOU,aAAa,mBA9CtB,iGAAuB;QACvB,sFAAoB,aAGpB,kEAAgB;QAChB,2DAAe;QACf,yDAAa;QACb,+DAAmB;QACnB,4DAAgB;QAChB,iEAAqB;QACrB,6DAAiB;QACjB,+DAAmB;QACnB,2DAAe;QACf,2DAAe;QACf,4DAAgB;QAChB,uDAAW;QACX,+DAAmB;QACnB,4DAAW;QACX,0DAAc;QACd,+DAAmB;QACnB,2DAAe;QACf,wDAAY;QACZ,0DAAc;QACd,wDAAY;QACZ,6DAAiB;QACjB,wDAAY;QACZ,0DAAY;QACZ,yEAAoB;QACpB,wDAAY;QACZ,yDAAa;QACb,4DAAgB;QAChB,0DAAc;QACd,0DAAc;QACd,+DAAmB,8DAEnB,uDAAW;QACX,yDAAY;QACZ,uEAAmB;QACnB,yDAAY;;;;;;;;;;;;;;;;;;;;;;ACvFhB,OAAO;AAC4D;AACxB;AAE3C,WAAW;AAC6E;;;;AAKjF,MAAM,cAAc;IAGzB,YACU,kBAA8B,EAC9B,WAA0B;QAD1B,uBAAkB,GAAlB,kBAAkB,CAAY;QAC9B,gBAAW,GAAX,WAAW,CAAe;QAJpC,SAAI,GAAG,EAAE,CAAC;QAMR,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,KAAqB,EAAE,EAAE;YACnE,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;gBACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,iFAAiF;aAClH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,cAAc;QACZ,IAAI,MAAM,GAAG,8EAAc,CAAC,uFAA2B,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAC7C,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,aAAa,CAAC,UAAU;QACtB,IAAI,MAAM,GAAG,8EAAc,CAAC,yFAA6B,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,IAAI,CAC5D,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,mBAAmB,CAAC,UAAU;QAC5B,IAAI,MAAM,GAAG,8EAAc,CAAC,+FAAmC,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,IAAI,CAC5D,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,cAAc,CAAC,WAAW;QACxB,IAAI,MAAM,GAAG,8EAAc,CAAC,wFAA4B,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,IAAI,CAC3D,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,iBAAiB,CAAC,WAAW;QAC3B,IAAI,MAAM,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,8EAAc,CAAC,yFAA6B,CAAC,CAAC,CAAC,CAAC,8EAAc,CAAC,yFAA6B,CAAC,CAAC;QACxI,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,IAAI,CAC3D,yDAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACxB,IAAI,MAAM,EAAE;gBACV,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;gBACL,OAAO,gDAAU,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;4EAzGU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM","sources":["./src/app/pages/company/company-add-edit/company-add-edit.component.ts","./src/app/pages/company/company-add-edit/company-add-edit.component.html","./src/app/pages/company/company-list/company-list.component.ts","./src/app/pages/company/company-list/company-list.component.html","./src/app/pages/company/company-routing.module.ts","./src/app/pages/company/company.module.ts","./src/app/pages/company/services/company.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators, FormArray } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { NbAuthJWTToken, NbAuthService, NB_AUTH_OPTIONS } from \"@nebular/auth\";\nimport { NbToastrService } from \"@nebular/theme\";\n\nimport { CompanyService } from \"../services/company.service\";\nimport { ROUTE_PATH } from \"../../../shared/constants/route-path.constant\";\n\n@Component({\n  selector: \"ngx-company-add-edit\",\n  templateUrl: \"./company-add-edit.component.html\",\n  styleUrls: [\"./company-add-edit.component.scss\"],\n})\nexport class CompanyAddEditComponent implements OnInit {\n  AddCompanyForm: FormGroup;\n  submitted = false;\n  page_title: string;\n  data_loading = false;\n\n  //logo variable\n  logoUploadFile: File | null = null; // Property to store the selected logo file\n  logo: string | ArrayBuffer | null = null; // Property to store the URL of the uploaded logo for preview\n  \n  //show password\n  showPassword =true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private aRoute: ActivatedRoute,\n    private companyService: CompanyService,\n    private toastrService: NbToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.AddCompanyFormInitialize();\n\n    if (this.router.url.indexOf(\"edit\") !== -1) {\n      this.data_loading = true;\n      const id = this.aRoute.snapshot.paramMap.get(\"id\");\n      this.page_title = \"Edit Company\";\n      this.companyRetrive(id);\n    } else {\n      this.page_title = \"Create Company\";\n    }\n  }\n\n  /**\n   * Company Form Initialize\n   */\n\n  AddCompanyFormInitialize() {\n  const emailRegex = \"[a-z0-9]+@[a-z]+.[a-z]{2,3}\";\n  this.AddCompanyForm = this.formBuilder.group({\n    company_organization: [\"\", [Validators.required]],\n    display_name: [\"\", [Validators.required]],\n    contact_person: [\"\", [Validators.required]],\n    decsignation: [\"\", [Validators.required]],\n    contact_number: [\"\", [Validators.required]],\n    email: [\"\", [Validators.required, Validators.pattern(emailRegex)]],\n    address: [\"\", [Validators.required]],\n    district: [\"\", [Validators.required]],\n    state: [\"\", [Validators.required]],\n    logo: [null], // Add a control for the logo file\n    user_name: [\"\", [Validators.required]],\n    password: [\"\", [Validators.required]],\n    confirm_password: [\"\", [Validators.required]],\n    remarks: [\"\", [Validators.required]],\n  });\n}\n\n  //Show Password\n   getInputType() {\n    if (this.showPassword) {\n      return 'text';\n    }\n    return 'password';\n  }\n\n  toggleShowPassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  /**\n   * Handle logo file change event\n   */\n   onFileChange(event: Event, fieldName: string) {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      const file = inputElement.files[0];\n      this.AddCompanyForm.get(fieldName)?.setValue(file); // Set the selected file in the form\n      this.logoUploadFile = file;\n\n      // Read and display the logo for preview\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.logo = reader.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  /**\n   * Company Retrive\n   * @params companyId\n   */\n   companyRetrive(companyId) {\n    let deleteData = { companyId: companyId };\n\n    this.companyService.companyRetrive(deleteData).subscribe((resp) => {\n      this.AddCompanyForm.patchValue({\n        username: resp[\"username\"],\n        company_organization: resp[\"company_organization\"],\n        number_of_links: resp[\"number_of_links\"],\n        email: resp[\"email\"],\n      });\n      this.data_loading = false;\n    });\n  }\n\n  /**\n   * Company Form Submit\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.AddCompanyForm.invalid) {\n      return;\n    } // stop here if form is invalid\n\n    if (this.router.url.indexOf(\"edit\") !== -1) {\n      this.AddCompanyForm.value.companyId =\n        this.aRoute.snapshot.paramMap.get(\"id\");\n      this.AddCompanyForm.value.flag = 1;\n    } else {\n      this.AddCompanyForm.value.flag = 0;\n    }\n\n    // Prepare your form data, including the logo file\n    const formData = new FormData();\n    for (const key in this.AddCompanyForm.value) {\n      if (key === \"logo\" && this.AddCompanyForm.value[key] instanceof File) {\n        formData.append(key, this.AddCompanyForm.value[key], this.AddCompanyForm.value[key].name);\n      } else {\n        formData.append(key, this.AddCompanyForm.value[key]);\n      }\n    }\n\n    this.companyService\n      .AddCompanyDetials(this.AddCompanyForm.value)\n      .subscribe((res) => {\n        this.backToCompanyList();\n        // if (res[\"status\"] != 200) {\n        //   this.toastrService.show(res[\"message\"], \"Warning\", {\n        //     status: \"warning\",\n        //     duration: 8000,\n        //   });\n        // } else {\n        //   this.toastrService.show(res[\"message\"], \"Success\", {\n        //     status: \"success\",\n        //     duration: 8000,\n        //   });\n        // }\n      });\n  }\n\n  /**\n   * Back to Company Lsit\n   * @param\n   * @returns\n   */\n  backToCompanyList() {\n    this.router.navigate([ROUTE_PATH.PAGES, ROUTE_PATH.COMPANY]);\n  }\n}\n","<!-- <div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>{{page_title}}</nb-card-header>\n            <nb-card-body [nbSpinner]=\"data_loading\" nbSpinnerStatus=\"info\">\n\n                <form [formGroup]=\"AddCompanyForm\" (ngSubmit)=\"onSubmit()\">\n\n<div class=\"form-group row\">\n    <label for=\"company_organization\" class=\"label col-sm-3 col-form-label\">\n        Company / Organisation *\n    </label>\n    <div class=\"col-sm-9\">\n        <div class=\"input-container\">\n            <input nbInput fullWidth type=\"text\" formControlName=\"company_organization\">\n            <nb-icon nbPrefix icon=\"briefcase-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n        </div>\n        <ng-container *ngIf=\"AddCompanyForm.controls.company_organization.touched && AddCompanyForm.controls.company_organization.errors\">\n            <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.company_organization.errors.required\">\n                Company Name / Organisation is required\n            </p>\n        </ng-container>\n    </div>\n</div>\n\n                     <div class=\"form-group row\">\n                        <label for=\"display_name\" class=\"label col-sm-3 col-form-label\">Display Name *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"display_name\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.display_name.touched && AddCompanyForm.controls.display_name.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.display_name.errors.required\">\n                                    Display Name is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"contact_person\" class=\"label col-sm-3 col-form-label\">Contact Person *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"contact_person\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.contact_person.touched && AddCompanyForm.controls.contact_person.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.contact_person.errors.required\">\n                                    Contact Person is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"decsignation\" class=\"label col-sm-3 col-form-label\">Decsignation *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"decsignation\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.decsignation.touched && AddCompanyForm.controls.decsignation.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.decsignation.errors.required\">\n                                    Decsignation is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"contact_number\" class=\"label col-sm-3 col-form-label\">Contact Number *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"contact_number\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.contact_number.touched && AddCompanyForm.controls.contact_number.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.contact_number.errors.required\">\n                                    Contact Number is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"email\" class=\"label col-sm-3 col-form-label\">E-Mail *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"email\" id=\"email\" placeholder=\"user@example.com\"\n                                name=\"email\" minlength=\"4\" maxlength=\"30\" formControlName=\"email\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.email.touched && AddCompanyForm.controls.email.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.email.errors.required\">\n                                    email is required</p>\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.email.errors.pattern\">\n                                    Please enter valid email.</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"address\" class=\"label col-sm-3 col-form-label\">Address *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"address\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.address.touched && AddCompanyForm.controls.address.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.address.errors.required\">\n                                    Address is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n                    \n                     <div class=\"form-group row\">\n                        <label for=\"district\" class=\"label col-sm-3 col-form-label\">District *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"district\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.district.touched && AddCompanyForm.controls.district.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.district.errors.required\">\n                                    District is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"state\" class=\"label col-sm-3 col-form-label\">State *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"state\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.state.touched && AddCompanyForm.controls.state.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.state.errors.required\">\n                                    State is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                       <label for=\"logo\" class=\"label col-sm-3 col-form-label\">Logo</label>\n                       <div class=\"col-sm-9\">\n                           <input type=\"file\" accept=\"image/*\" (change)=\"onFileChange($event, 'logo')\" />\n                           <!-- Display the uploaded logo here \n                           <img [src]=\"logo\" width=\"60\" height=\"60\" alt=\"Logo\" *ngIf=\"logoUploadFile\" />\n                       </div>\n                    </div>\n\n                     <div class=\"form-group row\">\n                        <label for=\"user_name\" class=\"label col-sm-3 col-form-label\">User Name *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"user_name\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.user_name.touched && AddCompanyForm.controls.user_name.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.user_name.errors.required\">\n                                   User Name is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n    \n                    <div class=\"form-group row\">\n                        <label for=\"password\" class=\"label col-sm-3 col-form-label\">Password *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"password\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.password.touched && AddCompanyForm.controls.password.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.password.errors.required\">\n                                   Password is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"confirm_password\" class=\"label col-sm-3 col-form-label\">Confirm Password *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"confirm_password\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.confirm_password.touched && AddCompanyForm.controls.confirm_password.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.confirm_password.errors.required\">\n                                    Confirm Password is required</p>\n                            </ng-container>\n                        </div>\n                    </div> \n\n                    <div class=\"form-group row\">\n                        <label for=\"remarks\" class=\"label col-sm-3 col-form-label\">Remarks *</label>\n                        <div class=\"col-sm-9\">\n                            <input nbInput fullWidth type=\"text\" formControlName=\"remarks\">\n                            <ng-container *ngIf=\"AddCompanyForm.controls.remarks.touched && AddCompanyForm.controls.remarks.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.remarks.errors.required\">\n                                    Remarks is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"offset-sm-3 col-sm-9\">\n                            <button type=\"submit\" nbButton status=\"primary\"\n                                [disabled]=\"submitted || !AddCompanyForm.valid\">Submit</button>\n                            &nbsp;&nbsp;\n                            <button nbButton status=\"danger\" (click)=\"backToCompanyList()\"\n                                routerLinkActive=\"router-link-active\"><b>\n                                    Cancel\n                                </b></button>\n                        </div>\n                    </div>\n                </form>\n\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n -->\n\n\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>{{page_title}}</nb-card-header>\n            <nb-card-body [nbSpinner]=\"data_loading\" nbSpinnerStatus=\"info\">\n\n                <form [formGroup]=\"AddCompanyForm\" (ngSubmit)=\"onSubmit()\">\n\n                 <div class=\"row\">\n                   <div class=\"col-md-3\">\n                     <!-- Right side: Logo -->\n                      <div class=\"form-group\">\n                        <div class=\"image-preview\" *ngIf=\"!logoUploadFile\">\n                          <i class=\"fa fa-image\"></i>\n                        </div>\n                          <!-- Display an image icon when no image is selected -->\n                          <img [src]=\"logo\" width=\"140\" height=\"140\" alt=\"Logo\" *ngIf=\"logoUploadFile\" style=\"border-radius: 10%;\" />\n                      </div>\n                   </div>\n\n                    <!-- Choose logo File Input -->\n                   <div class=\"col-md-3\">\n                      <div class=\"form-group\">\n                        <label for=\"logo\" class=\"label \">Logo Upload</label>\n                        <input nbInput fullWidth type=\"file\" accept=\"image/*\"  (change)=\"onFileChange($event, 'logo')\" />\n                      </div>\n                   </div> \n\n                    <div class=\"col-md-3\">\n                      <!-- Left side: Company Info and Choose File ., Company Name / Organisation , Display Name   -->\n                        <div class=\"form-group\">\n                          <label for=\"company_organization\" class=\"label \"> Company Name / Organisation * </label>\n                           <nb-form-field>\n                             <input nbInput fullWidth  type=\"text\" formControlName=\"company_organization\">\n                             <nb-icon nbPrefix icon=\"award-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                           </nb-form-field>\n                          <ng-container *ngIf=\"AddCompanyForm.controls.company_organization.touched && AddCompanyForm.controls.company_organization.errors\">\n                           <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.company_organization.errors.required\">\n                             Company / Organisation is required </p>\n                          </ng-container>\n                        </div> \n\n                        <div class=\"form-group \">\n                          <label for=\"display_name\" class=\"label \">Display Name *</label>\n                            <nb-form-field>\n                              <input nbInput fullWidth type=\"text\" formControlName=\"display_name\">\n                              <nb-icon nbPrefix icon=\"person-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                            </nb-form-field>\n                            <ng-container *ngIf=\"AddCompanyForm.controls.display_name.touched && AddCompanyForm.controls.display_name.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.display_name.errors.required\">\n                                    Display Name is required </p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                        <!-- Contact Person , Decsignation -->\n                       <div class=\"form-group \">\n                          <label for=\"contact_person\" class=\"label \">Contact Person *</label>\n                            <nb-form-field>\n                              <input nbInput fullWidth type=\"text\" formControlName=\"contact_person\">\n                              <nb-icon nbPrefix icon=\"phone-call-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                            </nb-form-field>\n                            <ng-container *ngIf=\"AddCompanyForm.controls.contact_person.touched && AddCompanyForm.controls.contact_person.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.contact_person.errors.required\">\n                                 Contact Person is required </p>\n                            </ng-container>\n                       </div>\n\n                       <div class=\"form-group \">\n                          <label for=\"decsignation\" class=\"label \">Decsignation *</label>\n                            <nb-form-field>\n                              <input nbInput fullWidth type=\"text\" formControlName=\"decsignation\">\n                              <nb-icon nbPrefix icon=\"briefcase-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                            </nb-form-field>\n                            <ng-container *ngIf=\"AddCompanyForm.controls.decsignation.touched && AddCompanyForm.controls.decsignation.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.decsignation.errors.required\">\n                                 Decsignation is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n                 </div>\n\n                  <!-- Full Width: Address -->\n                 <div class=\"form-group row\">\n                   <label for=\"address\" class=\"label col-sm-2 col-form-label \">Address *</label>\n                     <div class=\"col-md-10\"> \n                       <nb-form-field>\n                          <input nbInput fullWidth  shape=\"semi-round\" type=\"text\" formControlName=\"address\" >\n                          <nb-icon nbPrefix icon=\"home-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                       </nb-form-field>\n                       <ng-container *ngIf=\"AddCompanyForm.controls.address.touched && AddCompanyForm.controls.address.errors\">\n                         <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.address.errors.required\">\n                          Address is required</p>\n                        </ng-container>  \n                     </div>\n                 </div>\n\n                       <!-- User Name, E-Mail, Contact Number and District in One row -->\n                 <div class=\"row\">\n                    <div class=\"col-md-3\">\n                       <div class=\"form-group \">\n                         <label for=\"user_name\" class=\"label \">User Name *</label>\n                          <nb-form-field>\n                            <input nbInput fullWidth  type=\"text\" formControlName=\"user_name\" >\n                            <nb-icon nbPrefix icon=\"person-done-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                          </nb-form-field>    \n                          <ng-container *ngIf=\"AddCompanyForm.controls.user_name.touched && AddCompanyForm.controls.user_name.errors\">\n                            <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.user_name.errors.required\">\n                            User Name is required</p>\n                          </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                       <div class=\"form-group \">\n                         <label for=\"email\" class=\"label \">E-Mail *</label>\n                          <nb-form-field>\n                            <input nbInput fullWidth type=\"email\" id=\"email\" placeholder=\"user@example.com\"\n                             name=\"email\" minlength=\"4\" maxlength=\"30\" formControlName=\"email\">\n                            <nb-icon nbPrefix icon=\"at-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                          </nb-form-field>\n                            <ng-container *ngIf=\"AddCompanyForm.controls.email.touched && AddCompanyForm.controls.email.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.email.errors.required\">\n                                    email is required</p>\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.email.errors.pattern\">\n                                    Please enter valid email.</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                       <div class=\"form-group \">\n                         <label for=\"contact_number\" class=\"label \">Contact Number *</label>\n                          <nb-form-field>\n                            <input nbInput fullWidth type=\"text\" formControlName=\"contact_number\">\n                            <nb-icon nbPrefix icon=\"phone-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                          </nb-form-field>\n                           <ng-container *ngIf=\"AddCompanyForm.controls.contact_number.touched && AddCompanyForm.controls.contact_number.errors\">\n                             <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.contact_number.errors.required\">\n                              Contact Number is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n                    \n                    <div class=\"col-sm-3\">\n                        <div class=\"form-group \">\n                         <label for=\"district\" class=\"label \">District *</label>\n                          <nb-form-field>\n                            <input nbInput fullWidth type=\"text\" formControlName=\"district\">\n                            <nb-icon nbPrefix icon=\"pin-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                          </nb-form-field>\n                            <ng-container *ngIf=\"AddCompanyForm.controls.district.touched && AddCompanyForm.controls.district.errors\">\n                              <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.district.errors.required\">\n                                District is required </p>\n                            </ng-container>\n                        </div>\n                    </div>\n                 </div>\n\n                 <!-- State, Password, Confirm Password ,Remarks in One Row -->\n                 <div class=\"row\">   \n                    <div class=\"col-sm-3\">\n                        <div class=\"form-group \">\n                         <label for=\"password\" class=\"label \">Password *</label>\n                            <nb-form-field>\n                             <input nbInput fullWidth  [type]=\"getInputType()\" formControlName=\"password\" >\n                              <button nbSuffix nbButton ghost (click)=\"toggleShowPassword()\">\n                                 <nb-icon [icon]=\"showPassword ? 'eye-outline' : 'eye-off-outline'\"\n                                  pack=\"eva\"\n                                  [attr.aria-label]=\"showPassword ? 'hide password' : 'show password'\">\n                                 </nb-icon>\n                              </button>\n                           </nb-form-field>                        \n                            <ng-container *ngIf=\"AddCompanyForm.controls.password.touched && AddCompanyForm.controls.password.errors\">\n                               <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.password.errors.required\">\n                                Password is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"col-sm-3\">\n                        <div class=\"form-group \">\n                         <label for=\"confirm_password\" class=\"label \">Confirm Password *</label>\n                           <nb-form-field>\n                             <input nbInput fullWidth  [type]=\"getInputType()\" formControlName=\"confirm_password\" >\n                              <button nbSuffix nbButton ghost (click)=\"toggleShowPassword()\">\n                                 <nb-icon [icon]=\"showPassword ? 'eye-outline' : 'eye-off-outline'\"\n                                  pack=\"eva\"\n                                  [attr.aria-label]=\"showPassword ? 'hide password' : 'show password'\">\n                                 </nb-icon>\n                              </button>\n                           </nb-form-field>\n                            <ng-container *ngIf=\"AddCompanyForm.controls.confirm_password.touched && AddCompanyForm.controls.confirm_password.errors\">\n                                <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.confirm_password.errors.required\">\n                                Confirm Password is required</p>\n                            </ng-container>\n                        </div>\n                    </div> \n\n                    <div class=\"col-sm-3\">       \n                        <div class=\"form-group \">\n                         <label for=\"state\" class=\"label \">State *</label>\n                          <nb-form-field>\n                            <input nbInput fullWidth type=\"text\" formControlName=\"state\">\n                            <nb-icon nbPrefix icon=\"pin-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                          </nb-form-field>\n                            <ng-container *ngIf=\"AddCompanyForm.controls.state.touched && AddCompanyForm.controls.state.errors\">\n                               <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.state.errors.required\">\n                                State is required </p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div class=\"col-sm-3\">\n                        <div class=\"form-group \">\n                         <label for=\"remarks\" class=\"label \">Remarks *</label>\n                          <nb-form-field>\n                            <input nbInput fullWidth type=\"text\" formControlName=\"remarks\">\n                            <nb-icon nbPrefix icon=\"star-outline\" pack=\"eva\" class=\"icon\"></nb-icon>\n                          </nb-form-field>                       \n                            <ng-container *ngIf=\"AddCompanyForm.controls.remarks.touched && AddCompanyForm.controls.remarks.errors\">\n                              <p class=\"caption status-danger\" *ngIf=\"AddCompanyForm.controls.remarks.errors.required\">\n                               Remarks is required</p>\n                            </ng-container>\n                        </div>\n                    </div>\n                 </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"offset-sm-9 col-sm-9\">\n                            <button type=\"submit\" nbButton status=\"primary\"\n                                [disabled]=\"submitted || !AddCompanyForm.valid\">Submit</button>\n                            &nbsp;&nbsp;\n                            <button nbButton status=\"danger\" (click)=\"backToCompanyList()\"\n                                routerLinkActive=\"router-link-active\"><b>\n                                    Cancel\n                                </b></button>\n                        </div>\n                    </div>\n                </form>\n\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute, ROUTER_CONFIGURATION } from \"@angular/router\";\nimport { NbToastrService } from \"@nebular/theme\";\nimport { ConfirmationService } from \"primeng/api\";\n\nimport { CompanyService } from \"../services/company.service\";\nimport { ROUTE_PATH } from \"../../../shared/constants/route-path.constant\";\n\n@Component({\n  selector: \"ngx-company-list\",\n  templateUrl: \"./company-list.component.html\",\n  styleUrls: [\"./company-list.component.scss\"],\n})\nexport class CompanyListComponent implements OnInit {\n  itemsPerPage: any[] = [10, 25, 50];\n  companies: any;\n  columns: any[]; // for table columns\n\n  first = 0;\n  rows = 10;\n\n  constructor(\n    private dialogService: ConfirmationService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private aRoute: ActivatedRoute,\n    private companyService: CompanyService\n  ) {}\n\n  ngOnInit() {\n    // table   with their respective field name and header value\n    this.columns = [\n      //{ field: \"companyId\", header: \"ID\", show: true, sort: false },\n      { field: \"company_organization\", header: \"Comapany / Organization\",show: true, sort: true },    \n      { field: \"contact_person\", header: \"Contact Person\", show: true, sort: true },\n      { field: \"decsignation\", header: \"Designation\", show: true,sort: true },     \n      { field: \"contact_number\", header: \"Contact Number\", show: true, sort: true },\n      //{ field: \"email\", header: \"E_mail\", show: true, sort: true },\n      //{ field: \"address\", header: \"Address\", show: true, sort: true },\n      //{ field: \"remarks\", header: \"Remarks\", show: true, sort: true },\n      { field: \"active\", header: \"Action\", show: true, sort: true },\n    ];\n\n    this.companyList();\n  }\n\n  /**\n   * create Company\n   * @param\n   * @returns\n   */\n  createCompany() {\n    this.router.navigate([\n      ROUTE_PATH.PAGES,\n      ROUTE_PATH.COMPANY,\n      ROUTE_PATH.COMPANIES.CREATE,\n    ]);\n  }\n\n  /**\n   * Edit Company\n   * @param company_id\n   * @returns\n   */\n  editCompany(company_id: any) {\n    this.router.navigate([\n      ROUTE_PATH.PAGES,\n      ROUTE_PATH.COMPANY,\n      ROUTE_PATH.COMPANIES.EDIT,\n      company_id,\n    ]);\n  }\n\n  /**\n   * Delete Company confirmation\n   * @param companyId, companyName\n   * @returns\n   */\n  confirmDelete(companyId, companyName) {\n    this.dialogService.confirm({\n      header: \"Delete confirmation\",\n      message:\n        \"Are you sure that you want to delete this <b>\" +\n        companyName +\n        \"</b> Company ?\",\n      accept: () => {\n        this.deleteCompany(companyId);\n      },\n    });\n  }\n\n  /**\n   * Delete Company\n   * @param companyId\n   * @returns\n   */\n  deleteCompany(companyId) {\n    let deletePostData = { companyId: companyId };\n\n    this.companyService.deleteCompany(deletePostData).subscribe(\n      (response) => {\n        this.companyList();\n        // if (response[\"status\"] != 200) {\n        //   this.toastrService.show(response[\"message\"], \"Warning\", {\n        //     status: \"warning\",\n        //     duration: 8000,\n        //   });\n        // } else {\n        //   this.toastrService.show(response[\"message\"], \"Success\", {\n        //     status: \"success\",\n        //     duration: 8000,\n        //   });\n        // }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  /**\n   * Block/UnBlock Company confirmation\n   * @param companyId, companyName, action\n   * @returns\n   */\n  confirmBlockUnBlock(companyId, companyName, action) {\n    this.dialogService.confirm({\n      header: \"Delete confirmation\",\n      message:\n        \"Are you sure that you want to delete this <b>\" +\n        action +\n        \" - \" +\n        companyName +\n        \"</b> Company ?\",\n      accept: () => {\n        this.blockUnBlockCompany(companyId, action);\n      },\n    });\n  }\n\n  /**\n   * Block/UnBlock Company\n   * @param companyId, action\n   * @returns\n   */\n  blockUnBlockCompany(companyId:any, action:any) {\n    let blockUnBlockPostData = {\n      companyId: companyId,\n      block: action == \"Block\" ? true : false,\n    };\n\n    this.companyService.blockUnBlockCompany(blockUnBlockPostData).subscribe(\n      (response) => {\n        this.companyList();\n        // if (response[\"status\"] != 200) {\n        //   this.toastrService.show(response[\"message\"], \"Warning\", {\n        //     status: \"warning\",\n        //     duration: 8000,\n        //   });\n        // } else {\n        //   this.toastrService.show(response[\"message\"], \"Success\", {\n        //     status: \"success\",\n        //     duration: 8000,\n        //   });\n        // }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  /**\n   * Company List\n   * @param null\n   * @returns\n   */\n  companyList() {\n    this.companyService.getCompanyList().subscribe(\n      (response) => {\n        this.companies = response;\n        // if (response[\"status\"] != 200) {\n        //   this.toastrService.show(response[\"message\"], \"Warning\", {\n        //     status: \"warning\",\n        //     duration: 8000,\n        //   });\n        // } else {\n        //   this.toastrService.show(response[\"message\"], \"Success\", {\n        //     status: \"success\",\n        //     duration: 8000,\n        //   });\n        // }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n}\n","<!-- <nb-card class=\"inline-form-card full-card\">\n\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <nb-card-header>\n        <div class=\"row\">\n            <div class=\"col-md-10\"> Company List</div>\n            <div class=\"col-md-2\">\n                <button class=\"btn btn-sm btn-success\" (click)=\"createCompany()\">Create Company</button>\n            </div>\n        </div>\n    </nb-card-header>\n\n    <nb-card-body>\n\n        <div class=\"card\">\n            <!-- <h5>Programmatic Control</h5>\n            <div class=\"p-mb-3\">\n                <p-button type=\"button\" icon=\"pi pi-chevron-left\" (click)=\"prev()\" [disabled]=\"isFirstPage()\" styleClass=\"p-button-text\"></p-button>\n                <p-button type=\"button\" icon=\"pi pi-refresh\" (click)=\"reset()\" styleClass=\"p-button-text\"></p-button>\n                <p-button type=\"button\" icon=\"pi pi-chevron-right\" (click)=\"next()\" [disabled]=\"isLastPage()\" styleClass=\"p-button-text\"></p-button>\n            </div> -->\n         <!---  <p-table [value]=\"companies\" [paginator]=\"true\" [rows]=\"rows\" [showCurrentPageReport]=\"true\" [autoLayout]=\"true\"\n                [rowsPerPageOptions]=\"itemsPerPage\">\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <ng-container *ngFor=\"let col of columns\">\n                            <th *ngIf=\"col.show\" [pSortableColumn]=\"(col.sort==true)? col.field:false\"\n                                [class]=\"col.field+'-campaigns'\">\n                                <p-sortIcon *ngIf=\"col.sort==true\" [field]=\"col.field\" class=\"sort-icon\"\n                                    [id]=\"col.field+'-sort'\">\n                                </p-sortIcon>\n                                <span>{{col.header}}</span>\n                            </th>\n                        </ng-container>\n                        <th>Actions</th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-company>\n                    <tr>\n                        <td>{{company.companyId}}</td>\n                        <td>{{company.username}}</td>\n                        <td>{{company.company_organization}}</td>\n                        <td>{{company.number_of_links}}</td>\n                        <td>{{company.email}}</td>\n                        <td>{{company.active == true ? 'Active' : 'InActive'}}</td>\n                        <td class=\"text-center action\">\n                            <button (click)=\"editCompany(company.companyId)\" routerLinkActive=\"router-link-active\"\n                                nbTooltip=\"Edit\" nbTooltipPlacement=\"top\"\n                                class=\"btn btn-outline-primary btn-sm action-button\">\n                                <nb-icon icon=\"edit\" pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;\n                            <button nbTooltip=\"Delete\" (click)=\"confirmDelete(company.companyId,company.username)\"\n                                nbTooltipPlacement=\"top\" class=\"btn btn-outline-danger btn-sm action-button\">\n                                <nb-icon icon=\"close\" pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;\n                            <button nbTooltip=\"Block\" (click)=\"confirmBlockUnBlock(company.companyId,company.username, company.active == true ? 'Block' : 'UnBlock' )\"\n                                nbTooltipPlacement=\"top\"\n                                class='{{company.active ==true ? \"btn btn-outline-danger btn-sm action-button\":\"btn btn-outline-primary btn-sm action-button\"}}'>\n                                <nb-icon\n                                    icon='{{company.active ==true ? \"close-circle-outline\":\"checkmark-circle-2-outline\"}}'\n                                    pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n\n    </nb-card-body>\n\n\n</nb-card> -->\n\n<nb-card class=\"inline-form-card full-card\">\n\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <nb-card-header>\n        <div class=\"row\">\n            <div class=\"col-md-10\"> Company List</div>\n            <div class=\"col-md-2\">\n                <button class=\"btn btn-sm btn-success\" (click)=\"createCompany()\">Create Company</button>\n            </div>\n        </div>\n    </nb-card-header>\n\n    <nb-card-body>\n\n        <div class=\"card\">\n            <p-table [value]=\"companies\" [paginator]=\"true\" [rows]=\"rows\" [showCurrentPageReport]=\"true\" [autoLayout]=\"true\"\n                [rowsPerPageOptions]=\"itemsPerPage\">\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                    <ng-container *ngFor=\"let col of columns\">\n                            <th *ngIf=\"col.show\" [pSortableColumn]=\"(col.sort==true)? col.field:false\"\n                                [class]=\"col.field+'-campaigns'\">\n                                <p-sortIcon *ngIf=\"col.sort==true\" [field]=\"col.field\" class=\"sort-icon\"\n                                    [id]=\"col.field+'-sort'\">\n                                </p-sortIcon>\n                                <span>{{col.header}}</span>\n                            </th>\n                         </ng-container>\n                      <!-- <th>Company ID</th>\n                        <th>Username</th>\n                        <th>Company Organization</th>\n                        <th>Email</th>\n                        <th>Contact Person</th>\n                        <th>Designation</th>\n                        <th>Contact Number</th>\n                        <th>Address</th>\n                        <th>Remarks</th>\n                        <th>Actions</th> -->\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-company>\n                    <tr>\n                        <td>{{company.companyId}}</td>\n                        <td>{{company.username}}</td>\n                        <td>{{company.company_organization}}</td>\n                        <td>{{company.email}}</td>\n                        <td>{{company.contact_person}}</td>\n                        <td>{{company.userdecsignation}}</td>\n                        <td>{{company.contact_number}}</td>\n                        <td>{{company.address}}</td>\n                        <td>{{company.remarks}}</td>\n                        <td>{{company.active == true ? 'Active' : 'InActive'}}</td>\n                        <td class=\"text-center action\">\n                            <button (click)=\"editCompany(company.companyId)\" routerLinkActive=\"router-link-active\"\n                                nbTooltip=\"Edit\" nbTooltipPlacement=\"top\"\n                                class=\"btn btn-outline-primary btn-sm action-button\">\n                                <nb-icon icon=\"edit\" pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;\n                            <button nbTooltip=\"Delete\" (click)=\"confirmDelete(company.companyId,company.username)\"\n                                nbTooltipPlacement=\"top\" class=\"btn btn-outline-danger btn-sm action-button\">\n                                <nb-icon icon=\"close\" pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;\n                            <button nbTooltip=\"Block\" (click)=\"confirmBlockUnBlock(company.companyId,company.username, company.active == true ? 'Block' : 'UnBlock' )\"\n                                nbTooltipPlacement=\"top\"\n                                class='{{company.active ==true ? \"btn btn-outline-danger btn-sm action-button\":\"btn btn-outline-primary btn-sm action-button\"}}'>\n                                <nb-icon\n                                    icon='{{company.active ==true ? \"close-circle-outline\":\"checkmark-circle-2-outline\"}}'\n                                    pack=\"eva\" class=\"action-icons\"></nb-icon>\n                            </button>&nbsp;\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n\n    </nb-card-body>\n</nb-card>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Components\nimport { CompanyAddEditComponent } from './company-add-edit/company-add-edit.component';\nimport { CompanyListComponent } from './company-list/company-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompanyListComponent,\n  },\n  {\n    path: 'create',\n    component: CompanyAddEditComponent,\n  },\n  {\n    path: 'edit/:id',\n    component: CompanyAddEditComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanyRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  NbActionsModule,\n  NbAlertModule,\n  NbCalendarKitModule,\n  NbCalendarModule,\n  NbCalendarRangeModule,\n  NbFormFieldModule,\n  NbProgressBarModule,\n  NbSpinnerModule,\n  NbTooltipModule,\n  NbCheckboxModule,\n  NbButtonModule,\n  NbAccordionModule,\n  NbCardModule,\n  NbDialogModule,\n  NbListModule,\n  NbRouteTabsetModule,\n  NbStepperModule,\n  NbTabsetModule,\n  NbUserModule,\n  NbIconModule,\n  NbInputModule,\n  NbTreeGridModule,\n  NbSelectModule,\n  NbToggleModule, \n  NbContextMenuModule,\n} from '@nebular/theme';\n\nimport { ThemeModule } from '../../@theme/theme.module';\n\n// Interceptor\nimport { NbAuthJWTInterceptor, HttpErrorInterceptor } from '../../auth/interceptor/jwt-interceptor';\n\n// Primeng\nimport { TableModule } from 'primeng/table';\nimport {ButtonModule} from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\n\n\n// Routing Module\nimport { CompanyRoutingModule } from './company-routing.module';\n\n// Components\nimport { CompanyAddEditComponent } from './company-add-edit/company-add-edit.component';\nimport { CompanyListComponent } from './company-list/company-list.component';\n\n@NgModule({\n  declarations: [\n    CompanyAddEditComponent,\n    CompanyListComponent\n  ],\n  imports: [\n    HttpClientModule,\n    NbActionsModule,\n    NbAlertModule,\n    NbCalendarKitModule,\n    NbCalendarModule,\n    NbCalendarRangeModule,\n    NbFormFieldModule,\n    NbProgressBarModule,\n    NbSpinnerModule,\n    NbTooltipModule,\n    NbCheckboxModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ThemeModule,\n    NbTabsetModule,\n    NbRouteTabsetModule,\n    NbStepperModule,\n    NbCardModule,\n    NbButtonModule,\n    NbListModule,\n    NbAccordionModule,\n    NbUserModule,\n    CommonModule,\n    CompanyRoutingModule,\n    NbIconModule,\n    NbInputModule,\n    NbTreeGridModule,\n    NbSelectModule,\n    NbToggleModule,\n    NbContextMenuModule,\n    NbDialogModule.forRoot(),\n    TableModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    DialogModule,\n  ],\n  providers: [\n    ConfirmationService, \n    { provide: HTTP_INTERCEPTORS, useClass: NbAuthJWTInterceptor, multi: true }, \n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\n  ],\n})\nexport class CompanyModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { NbAuthJWTToken, NbAuthService } from \"@nebular/auth\";\n\n// Rxjs\nimport { BehaviorSubject, Observable, throwError, of } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\n\n// constant\nimport { API_END_POINTS, getApiEndPoint } from \"../../../shared/constants/api-constant\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CompanyService {\n  user = {};\n\n  constructor(\n    private companyServicehttp: HttpClient,\n    private authService: NbAuthService\n  ) {\n    this.authService.onTokenChange().subscribe((token: NbAuthJWTToken) => {\n      if (token.isValid()) {\n        this.user = token.getPayload(); // here we receive a payload from the token and assigns it to our `user` variable\n      }\n    });\n  }\n\n  /**\n   * Company List\n   * @returns\n   */\n  getCompanyList(): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.COMPANY.LIST);\n    return this.companyServicehttp.get(apiURL).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Delete Company\n   * @param deleteData\n   * @returns\n   *\n   */\n  deleteCompany(deleteData): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.COMPANY.DELETE);\n    return this.companyServicehttp.delete(apiURL, deleteData).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Bllock/UnBlock Company\n   * @param deleteData\n   * @returns\n   *\n   */\n  blockUnBlockCompany(deleteData): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.COMPANY.BLOCK_UBLOCK);\n    return this.companyServicehttp.delete(apiURL, deleteData).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Retrive Company details\n   * @param retriveData\n   * @returns\n   *\n   */\n  companyRetrive(retriveData): Observable<any> {\n    let apiURL = getApiEndPoint(API_END_POINTS.COMPANY.FETCH);\n    return this.companyServicehttp.post(apiURL, retriveData).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n\n  /**\n   * Add Company\n   * @param Values\n   * @returns\n   *\n   */\n  AddCompanyDetials(company_obj): Observable<any> {\n    let apiURL = (company_obj[\"flag\"] == 0) ? getApiEndPoint(API_END_POINTS.COMPANY.CREATE) : getApiEndPoint(API_END_POINTS.COMPANY.UPDATE);\n    return this.companyServicehttp.post(apiURL, company_obj).pipe(\n      switchMap((result: any) => {\n        if (result) {\n          return of(result);\n        } else {\n          return throwError(result);\n        }\n      })\n    );\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}